WITH TripPointRaw as 
(
SELECT
	TripId,
    UserId,
    CASE 
     WHEN CAST(TripDataPoint.Lat as FLOAT) != 255 THEN CAST(TripDataPoint.Lat as FLOAT)
     ELSE NULL
    END as RawLat,
    CASE 
     WHEN CAST(TripDataPoint.Lon as FLOAT) != 255 THEN CAST(TripDataPoint.Lon as FLOAT)
     ELSE NULL
    END as RawLong,
    CASE  
     WHEN CAST(TripDataPoint.Speed as FLOAT) >=0 THEN CAST(TripDataPoint.Speed as FLOAT)
     ELSE NULL
    END as spd,
    CASE  
     WHEN CAST(TripDataPoint.EngineRPM as FLOAT) != -255 THEN CAST(TripDataPoint.EngineRPM as FLOAT)
     ELSE NULL
    END as enginerpm,
    CASE  
     WHEN CAST(TripDataPoint.EngineLoad as FLOAT) != -255 THEN CAST(TripDataPoint.EngineLoad as FLOAT)
     ELSE NULL
    END as engineLoad,
    CASE  
     WHEN CAST(TripDataPoint.ShortTermFuelBank1 as FLOAT) != -255 THEN CAST(TripDataPoint.ShortTermFuelBank1 as FLOAT)
     ELSE NULL
    END as shortTermFuelBank,
    CASE  
     WHEN CAST(TripDataPoint.LongTermFuelBank1 as FLOAT) != -255 THEN CAST(TripDataPoint.LongTermFuelBank1 as FLOAT)
     ELSE NULL
    END as longTermFuelBank,
    CASE  
     WHEN CAST(TripDataPoint.MAFFlowRate as FLOAT) != -255 THEN CAST(TripDataPoint.MAFFlowRate as FLOAT)
     ELSE NULL
    END as flowRate,
    CASE  
     WHEN CAST(TripDataPoint.ThrottlePosition as FLOAT) != -255 THEN CAST(TripDataPoint.ThrottlePosition as FLOAT)
     ELSE NULL
    END as throttlePos,
    CASE  
     WHEN CAST(TripDataPoint.Runtime as FLOAT) >=0 THEN CAST(TripDataPoint.Runtime as FLOAT)
     ELSE NULL
    END as runtime,
    CASE  
     WHEN CAST(TripDataPoint.DistanceWithMIL as FLOAT) >=0 THEN CAST(TripDataPoint.DistanceWithMIL as FLOAT)
     ELSE NULL
    END as distanceWithMIL,
    CASE  
     WHEN CAST(TripDataPoint.RelativeThrottlePosition as FLOAT) != -255 THEN CAST(TripDataPoint.RelativeThrottlePosition as FLOAT)
     ELSE NULL
    END as relativeThrottlePos,
    CASE  
     WHEN CAST(TripDataPoint.OutsideTemperature as FLOAT) != -255 THEN CAST(TripDataPoint.OutsideTemperature as FLOAT)
     ELSE NULL
    END as outsideTemperature,
    CASE  
     WHEN CAST(TripDataPoint.EngineFuelRate as FLOAT) != -255 THEN CAST(TripDataPoint.EngineFuelRate as FLOAT)
     ELSE NULL
    END as engineFuelRate,
	TripDataPoint.VIN as vin,
    TripDataPoint.RecordedTimeStamp as actualTS,
    DATEADD(millisecond,- DATEPART(millisecond,TripDataPoint.RecordedTimeStamp),DATEADD(second, 5 - CAST(CEILING(DATEPART(second, TripDataPoint.RecordedTimeStamp)%5) as BIGINT),TripDataPoint.RecordedTimeStamp)) as ts,
    DATEDIFF(millisecond, TripDataPoint.RecordedTimeStamp, DATEADD(millisecond,-DATEPART(millisecond,TripDataPoint.RecordedTimeStamp),DATEADD(second, 5 - CAST(CEILING(DATEPART(second, TripDataPoint.RecordedTimeStamp)%5) as BIGINT),TripDataPoint.RecordedTimeStamp))) as tsDiff
FROM
    CarDeviceData TIMESTAMP by TripDataPoint.RecordedTimeStamp
WHERE
    TripId is not null
    and TripId != ''
    and UserId is not null
    and UserId != ''
),
TripPointAgg as 
(
SELECT 
    TripId,
    UserId,
    vin,
    ts,
    AVG(RawLat) as lat,
    AVG(RawLong) as lon,
    MIN(tsDiff) as lastRecTime,
    MAX(tsDiff) as firstRecTime,
    MIN(spd) as minSpeed,
    MAX(spd) as maxSpeed,
    AVG(spd) as avgSpeed,
    AVG(engineLoad) as avgEngineLoad,
    AVG(shortTermFuelBank) as avgShortTermFuelBank,
    AVG(longTermFuelBank) as avgLongTermFuelBank,
    MAX(enginerpm) as maxEngineRpm,
    AVG(flowRate) as avgFlowRate,
    AVG(throttlePos) as avgThrottlePos,
    MAX(runtime) as maxRuntime,
    MAX(distanceWithMIL) as maxDistanceWithMIL,
    AVG(relativeThrottlePos) as avgRelativeThrottlePos,
    AVG(outsideTemperature) as avgOutsideTemperature,
    AVG(engineFuelRate) as avgEngineFuelRate
FROM
    TripPointRaw
WHERE
    ts is not null
GROUP BY
    TripId,
    UserId,
    vin,
    ts,
    TumblingWindow(hour,1)    
),
RoughDrivingStats as 
(
SELECT
    t1.TripId,
    t1.UserId,
    t1.lat,
    t1.lon,
    CASE
        WHEN t3.spd - t2.spd > 50 THEN 2
        WHEN t2.spd - t3.spd > 70 OR t1.maxSpeed - t1.minSpeed > 70 OR t1.maxSpeed - t1.avgSpeed > t1.avgSpeed - t1.minSpeed + 0.10*(t1.maxSpeed - t1.minSpeed) THEN 1
        ELSE 0
    END as POIType,
    t1.ts,
    t1.avgSpeed,
    t1.minSpeed,
    t1.maxSpeed,
    t1.avgEngineLoad,
    t1.avgShortTermFuelBank,
    t1.avgLongTermFuelBank,
    t1.maxEngineRpm,
    t1.avgFlowRate,
    t1.avgThrottlePos,
    t1.maxRuntime,
    t1.maxDistanceWithMIL,
    t1.avgRelativeThrottlePos,
    t1.avgOutsideTemperature,
    t1.avgEngineFuelRate,
    t3.spd as firstSpeed,
    t2.spd as lastSpeed
FROM TripPointAgg t1
JOIN TripPointRaw t2
ON t1.TripId = t2.TripId and 
t1.vin = t2.vin and 
t1.ts = t2.ts and
t1.lastRecTime = t2.tsDiff and
DATEDIFF(minute,t1,t2) BETWEEN 0 and 0
JOIN TripPointRaw t3
ON t1.TripId = t3.TripId and 
t1.vin = t3.vin and 
t1.ts = t3.ts and
t1.firstRecTime = t3.tsDiff and
DATEDIFF(minute,t1,t3) BETWEEN 0 and 0
)

SELECT
    TripId,
    lat as Latitude,
    lon as Longitude,
    POIType,
    ts as RecordedTimeStamp
INTO PowerBISink
FROM RoughDrivingStats
WHERE POIType > 0
